https://hub.docker.com
1- What is Docker?
Docker provides a platform to isolate apps and their dependencies.
Docker Image is a (template) file, comprised of multiple layers, that is used to execute code in a Docker container.

2- Why use Docker?
3- Docker best practices
4- Docker vulnerabilities
5- Docker build and deploy by functional exercises

How to install Docker
https://docs.docker.com/engine/install/centos/

	
	yum -y install docker
	systemctl enable docker --now
	docker - -help
	docker - -version
	docker pull - -help
	docker pull httpd
	docker images
	docker ps
	docker ps -a

	docker search - -filter=stars=3 - -no-trunc - -limit 10 httpd 
	docker search 463980270363
	docker pull httpd	(pull the images from docker repo)
	docker run -p80:8080 - -name linux-tower-web httpd
	docker exec -it <ID> /bin/bash
	docker logs <ID>
	docker build -build-arg city=Edenburg -t ozzie6935/web:latest .
	docker run -it httpd sh
	docker run -dit --name webserver -h webserver --link peach:peach  busybox sh
	docker run -dit --name webserver -h peech -p 8080:80 dd85cdbb9987
	docker run -dit --name webserver - -volume=’/usr/src/app/’ -h peech -p 8080:80 dd85cdbb9987 - -restart always
	docker run -dit -p 80:80 -v /tmp/webpg:/usr/local/apache2/htdocs httpd - -restart always
	docker system prune -a 		(to delete everything)
	docker login?
	docker stop ID
	docker build .
	docker build -t mahmadg/simpleweb .
	docker tag <Image-ID> <New-name> (to give the name)
	docker inspect
	docker stats		(to check the performance like top command)

Communications between containers

	docker network ls
	docker network create mongo-network
	docker network create web_server - -driver bridge
	docker inspect web_bridge
	docker run -dit - -name server - -network web_bridge httpd:latest
	docker run -dit - -name client - -network web_bridge mysql:latest
	docker inspect web_bridge
	docker attach mysql
	ctrl p q (deattach)
What is Docker Compose ?
https://www.youtube.com/watch?v=k900NVwFfcA


What is docker swarm ?
What is Containers?
Containers is a ready or running application created from docker images.
We need container 




Video Reference
Linking multiple containers
https://www.youtube.com/watch?v=HY3WDz6j_hU

MySQL port number=3306

	Docker pull mysql:8
	docker run  --name my-db -p 3306:3306 - -volume /tmp/db - -restart always  -e MYSQL_ROOT_PASSWORD=hello123 -d mysql:8
	docker exec 515a99f091e6 mysql - -version
	docker exec  my-db  mysql -uroot -phello123 -e 'show databases;' 
	docker exec -it my-db sh (to get into the Linux terminal )
	docker exec -it my-db mysql -uroot -phello123 (to go to into db)

Let’s learn Database Now!
	CREATE DATABASE testDB;
	use testDB


	CREATE TABLE Personal_info (PersonID int, LastName varchar(255), FirstName varchar(255), Address varchar(255), City varchar(255));


	docker pull wordpress
	docker run --name w-press --link mysql:mysql1 -p 8080:80 - -restart always -d wordpress



What is Jenkins ?
Jenkins is an open-source automation server which enables developers around the world to reliably build, test, and deploy their software.

	docker run --rm --name jenkins -p 8080:8080 -p 50000:50000 jenkins/jenkins:2.303.1-jdk8
	



www.jenkins.io
https://www.youtube.com/watch?v=rgai3yzRsA0
What is Jenkins and how it works in Urdu?
https://www.youtube.com/watch?v=6l9JYqafSLQ



 

What is Kubernetes ?
Kubernetes is an open-source container management tool which automates container deployment, scaling and container load balancing.
(Kubernetes is an open source container orchestration engine for automating deployment, scaling, and management of containerized applications. The open source project is hosted by the Cloud Native Computing Foundation.)
Types of kubes:
1-	Minikube ()
2-	
What is Kubectl ?
Command line tool (CLI)
Used for managing containers
Kubectl is used in development and pod
Kubernetes references
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
Reference video:
https://www.youtube.com/watch?v=X48VuDVv0do
https://www.youtube.com/watch?v=saEce9wU2Jk
Requirements:
•	Minimum 2GB memory required
•	Minimum 2CPU needed
•	Swap should off 
•	Set hostname & entry in /etc/hosts
•	Port numbers need to be added in firewall
•	6443*,2379-2380,10250,10251,10252

https://www.tecmint.com/install-kubernetes-cluster-on-centos-7/
https://www.linuxtechi.com/install-docker-on-centos-7/

Kube master steps:
systemctl start firewalld
     cat <<EOF>> /etc/hosts
192.168.1.167 kube-master
192.168.1.168 kube-worker
EOF

     vim /etc/hosts
     ping kube-worker
     setenforce 0
     sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
     firewall-cmd --list-all
     firewall-cmd --permanent --add-port=6443/tcp
     firewall-cmd --permanent --add-port=2379-2380/tcp
     firewall-cmd --permanent --add-port=10250/tcp
     firewall-cmd --permanent --add-port=10251/tcp
     firewall-cmd --permanent --add-port=10252/tcp
     firewall-cmd --permanent --add-port=10255/tcp
     firewall-cmd --reload
     firewall-cmd --reload
     modprobe br_netfilter
     echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
     cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

     yum install kubeadm
     yum install yum-utils
     yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo -y
     yum install docker-ce –y
     docker --version
     systemctl enable kubelet
     systemctl start kubelet
     systemctl enable docker
     systemctl start docker
     swapoff -a
     cat /etc/fstab
     kubeadm init
     ls
     touch kube.txt
     vim kube.txt
     mkdir -p $HOME/.kube
     cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
     chown $(id -u):$(id -g) $HOME/.kube/config
     kubectl get nodes
     export kubever=$(kubectl version | base64 | tr -d '\n')
     kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
     kubectl get nodes
     systemctl status kubelet
     kubectl get nodes
     ls
     cat kube.txt
     kubectl get nodes
     vim kube.txt
     kubectl get nodes

Kube Worker setup:
cat <<EOF>> /etc/hosts
     192.168.1.167 kube-master
     192.168.1.168 kube-worker
     EOF
     vim /etc/hosts
     setenfoce 0
     setenforce 0
     sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
     firewall-cmd --permanent --add-port=6783/tcp
     systemctl start firewalld
     firewall-cmd --permanent --add-port=6783/tcp
     firewall-cmd --permanent --add-port=10250/tcp
     firewall-cmd --permanent --add-port=10255/tcp
     firewall-cmd --permanent --add-port=30000-32767/tcp
     firewall-cmd  --reload
     echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
     cat <<EOF > /etc/yum.repos.d/kubernetes.repo
     [kubernetes]
     name=Kubernetes
     baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
     enabled=1
     gpgcheck=1
     repo_gpgcheck=1
     gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
     EOF
     yum install kubeadm
     yum install yum-utils
      yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo
     yum install docker-ce –y
     docker --version
     systemctl enable docker
     systemctl start docker
     systemctl enable kubelet
     systemctl start kubelet
     kubeadm join 192.168.1.167:6443 --token vz9t0p.1fqgnkb2beyy6l1t     --discovery-token-ca-cert-hash sha256:d2ec22da0c481b0a19015af2e956256d6bad410a4faee785cfc311a06fbbc83c
     swapof -a
     swapoff -a
     vim /etc/fstab
     swapoff -a
     vim /etc/fstab
     systemctl status kubelet
     systemctl stop kubelet
     systemctl status kubelet
     swapoff -a
     vim /etc/fstab
     swapoff -a
     systemctl restart kubelet
    systemctl status kubelet
    kubeadm join 192.168.1.167:6443 --token vz9t0p.1fqgnkb2beyy6l1t     --discovery-token-ca-cert-hash sha256:d2ec22da0c481b0a19015af2e956256d6bad410a4faee785cfc311a06fbbc83c
    kubeadm join 192.168.1.167:6443 --token vz9t0p.1fqgnkb2beyy6l1t --discovery-token-ca-cert-hash sha256:d2ec22da0c481b0a19015af2e956256d6bad410a4faee785cfc311a06fbbc83c
    vim /etc/fstab
    init 6
    vim /etc/hosts
    vim /etc/sysconfig/network-scripts/ifcfg-ens192
    systemctl restart network
    hostnamectl set-hostname kube-worker
    bash
    cat /etc/fstab
    kubeadm join 192.168.1.167:6443 --token vz9t0p.1fqgnkb2beyy6l1t --discovery-token-ca-cert-hash sha256:d2ec22da0c481b0a19015af2e956256d6bad410a4faee785cfc311a06fbbc83c


•	Docker start/enable
•	Kubeadm ,	kubelet, kubectl
•	Kubelet start/enable


•	API (Application Programming Interface , is a computing interface that defines interactions between multiple software intermediaries)
•	SDLC (Software development life cycle)
•	CICD 
•	Continuous Deployment
•	Continuous Delivery
Master node
	API server
	controllers
	scheduler 
	etcd	
Worker node
	kubelet
	pod
	services
	volume
	







